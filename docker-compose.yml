services:
  # Base de datos MySQL para el backend
  mysql:
    image: mysql:8.0
    container_name: mysql_db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: COP_db
      MYSQL_USER: cop_user
      MYSQL_PASSWORD: cop_password
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db-init:/docker-entrypoint-initdb.d
    networks:
      - cop_net
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password

  # Base de datos MongoDB para el worker
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: worker_db
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - cop_net
    restart: unless-stopped

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/COP_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: cop_user
      SPRING_DATASOURCE_PASSWORD: cop_password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.MySQL8Dialect
    depends_on:
      - mysql
    networks:
      - cop_net
    restart: unless-stopped

  worker:
    build:
      context: ./Worker
      dockerfile: Dockerfile
    container_name: worker
    environment:
      SPRING_PROFILES_ACTIVE: dev
      worker.backend.base-url: http://backend:8080/api
      SPRING_DATA_MONGODB_URI: mongodb://admin:admin123@mongodb:27017/worker_db?authSource=admin
    depends_on:
      - backend
      - mongodb
    networks:
      - cop_net
    restart: unless-stopped

  frontend:
    build:
      context: ./Cop-Frontend-Angular
      dockerfile: Dockerfile
      args:
        NODE_VERSION: 20.19.0
        APP_NAME: cop-frontend-angular
    container_name: front
    ports:
      - "8081:80"
    depends_on:
      - backend
    networks:
      - cop_net
    restart: unless-stopped

networks:
  cop_net:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  mongodb_data:
    driver: local